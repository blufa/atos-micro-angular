{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../shared/components/input-text/input-text.component\";\nfunction CertificationsFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"inputTextComponent\", 5)(2, \"inputTextComponent\", 6);\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CertificationsFormComponent_div_3_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeCertification(i_r2));\n    });\n    i0.ɵɵtext(4, \"Remove Certification\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const certification_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(certification_r1.get(\"name\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(certification_r1.get(\"year\")));\n  }\n}\nexport class CertificationsFormComponent {\n  constructor() {\n    this.certificateNameControl = new FormControl(\"\", Validators.required);\n    this.certificateYearControl = new FormControl(\"\", Validators.required);\n  }\n  getControl(certification) {\n    return certification;\n  }\n  addCertification() {\n    this.form.push(new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      year: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(4), Validators.min(1900), Validators.max(new Date().getFullYear())])\n    }));\n  }\n  removeCertification(index) {\n    this.form.removeAt(index);\n  }\n}\nCertificationsFormComponent.ɵfac = function CertificationsFormComponent_Factory(t) {\n  return new (t || CertificationsFormComponent)();\n};\nCertificationsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CertificationsFormComponent,\n  selectors: [[\"app-certifications-form\"]],\n  inputs: {\n    form: \"form\"\n  },\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"certifications\", \"px-4\"], [1, \"text-white\", \"text-lg\", \"md:text-gray-500\", \"mb-1\"], [\"class\", \"form form-three\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"add-category\", 3, \"click\"], [1, \"form\", \"form-three\"], [\"type\", \"text\", \"label\", \"Name\", \"name\", \"certificateName\", \"placeholder\", \"Name\", 3, \"control\"], [\"type\", \"text\", \"label\", \"Year\", \"name\", \"certificateYear\", \"placeholder\", \"Year\", 3, \"control\"], [\"type\", \"button\", 1, \"remove-category\", 3, \"click\"]],\n  template: function CertificationsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Certifications\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, CertificationsFormComponent_div_3_Template, 5, 2, \"div\", 2);\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function CertificationsFormComponent_Template_button_click_4_listener() {\n        return ctx.addCertification();\n      });\n      i0.ɵɵtext(5, \"Add Certification\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.form.controls);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.InputTextComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqCA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICE3FC,8BAAwF;IACpFA,wCACwD;IAGxDA,iCAA+E;IAA/CA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAAeA,oCAAoB;IAAAA,iBAAS;;;;;IAHxGA,eAAiD;IAAjDA,yEAAiD;IAEjDA,eAAiD;IAAjDA,yEAAiD;;;ADC7D,OAAM,MAAOC,2BAA2B;EALxCC;IASE,2BAAsB,GAAgB,IAAIL,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;IAC9E,2BAAsB,GAAgB,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;;EAE9EC,UAAU,CAACC,aAAqC;IAC9C,OAAOA,aAA4B;EACrC;EAEAC,gBAAgB;IACd,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAIV,SAAS,CAAC;MAC3BW,IAAI,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEC,IAAI,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,GAAG,CAAC,IAAI,CAAC,EAAEd,UAAU,CAACe,GAAG,CAAC,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC,CAAC;KAClK,CAAC,CAAC;EACL;EAEAC,mBAAmB,CAACC,KAAa;IAC/B,IAAI,CAACX,IAAI,CAACY,QAAQ,CAACD,KAAK,CAAC;EAC3B;;AApBWjB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAmB;EAAAC;IAAAd;EAAA;EAAAe;EAAAC;EAAAC;EAAAC;IAAA;MCRxCzB,8BAAiC;MACwBA,8BAAc;MAAAA,iBAAK;MAExEA,4EAMM;MAENA,iCAAwE;MAA3CA;QAAA,OAAS0B,sBAAkB;MAAA,EAAC;MAAe1B,iCAAiB;MAAAA,iBAAS;;;MAR3CA,eAAkB;MAAlBA,2CAAkB","names":["FormControl","FormGroup","Validators","i0","CertificationsFormComponent","constructor","required","getControl","certification","addCertification","form","push","name","minLength","year","maxLength","min","max","Date","getFullYear","removeCertification","index","removeAt","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/builder/components/certifications-form/certifications-form.component.ts","/home/laye/dev/spring/atos-micro-angular/app/src/app/builder/components/certifications-form/certifications-form.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-certifications-form',\n  templateUrl: './certifications-form.component.html',\n  styleUrls: ['./certifications-form.component.scss']\n})\nexport class CertificationsFormComponent {\n\n  @Input() form: FormArray;\n\n  certificateNameControl: FormControl = new FormControl(\"\", Validators.required);\n  certificateYearControl: FormControl = new FormControl(\"\", Validators.required);\n\n  getControl(certification: AbstractControl | null): FormControl {\n    return certification as FormControl;\n  }\n\n  addCertification(): void {\n    this.form.push(new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      year: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(4), Validators.min(1900), Validators.max(new Date().getFullYear())])\n    }));\n  }\n\n  removeCertification(index: number): void {\n    this.form.removeAt(index);\n  }\n}\n","<div class=\"certifications px-4\">\n    <h2 class=\"text-white text-lg md:text-gray-500 mb-1\">Certifications</h2>\n\n    <div class=\"form form-three\" *ngFor=\"let certification of form.controls; let i = index\">\n        <inputTextComponent type=\"text\" label=\"Name\" name=\"certificateName\" placeholder=\"Name\"\n            [control]=\"getControl(certification.get('name'))\" />\n        <inputTextComponent type=\"text\" label=\"Year\" name=\"certificateYear\" placeholder=\"Year\"\n            [control]=\"getControl(certification.get('year'))\" />\n        <button class=\"remove-category\" (click)=\"removeCertification(i)\" type=\"button\">Remove Certification</button>\n    </div>\n\n    <button class=\"add-category\" (click)=\"addCertification()\" type=\"button\">Add Certification</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}