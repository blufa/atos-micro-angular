{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction InputTextComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"for\", ctx_r0.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction InputTextComponent_ng_container_3_div_1_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" est requis !\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.label);\n  }\n}\nfunction InputTextComponent_ng_container_3_div_1_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" doit avoir au minimum \");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" caract\\u00E8res !\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const err_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.label);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(err_r3[\"value\"][\"requiredLength\"]);\n  }\n}\nfunction InputTextComponent_ng_container_3_div_1_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" est invalid !\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.label);\n  }\n}\nfunction InputTextComponent_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, InputTextComponent_ng_container_3_div_1_small_1_Template, 4, 1, \"small\", 7);\n    i0.ɵɵtemplate(2, InputTextComponent_ng_container_3_div_1_small_2_Template, 7, 2, \"small\", 7);\n    i0.ɵɵtemplate(3, InputTextComponent_ng_container_3_div_1_small_3_Template, 4, 1, \"small\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const err_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", err_r3[\"key\"] === \"required\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", err_r3[\"key\"] === \"minlength\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", err_r3[\"key\"] === \"email\" || err_r3[\"key\"] === \"pattern\");\n  }\n}\nfunction InputTextComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputTextComponent_ng_container_3_div_1_Template, 4, 3, \"div\", 5);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r1.control.errors));\n  }\n}\nexport class InputTextComponent {\n  constructor() {\n    this.type = '';\n    this.label = '';\n    this.name = '';\n    this.class = '';\n    this.placeholder = '';\n    this.readonly = false;\n    this.control = new FormControl();\n  }\n  ngOnInit() {\n    if (!this.type) {\n      this.type = \"text\";\n    }\n    if (!this.placeholder) {\n      this.placeholder = '';\n    }\n    if (!this.readonly) {\n      this.readonly = false;\n    }\n    if (!this.class) {\n      this.class = '';\n    }\n  }\n}\nInputTextComponent.ɵfac = function InputTextComponent_Factory(t) {\n  return new (t || InputTextComponent)();\n};\nInputTextComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputTextComponent,\n  selectors: [[\"inputTextComponent\"]],\n  inputs: {\n    type: \"type\",\n    label: \"label\",\n    name: \"name\",\n    class: \"class\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    control: \"control\"\n  },\n  decls: 4,\n  vars: 10,\n  consts: [[1, \"w-full\", \"flex\", \"flex-col\", \"items-start\", \"mb-4\"], [\"class\", \"text-white md:text-gray-500 font-medium mb-1\", 3, \"for\", 4, \"ngIf\"], [3, \"type\", \"id\", \"name\", \"formControl\", \"placeholder\", \"readonly\"], [4, \"ngIf\"], [1, \"text-white\", \"md:text-gray-500\", \"font-medium\", \"mb-1\", 3, \"for\"], [\"class\", \"flex flex-col justify-start items-start gap-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"flex-col\", \"justify-start\", \"items-start\", \"gap-2\"], [\"class\", \"text-red-400\", 4, \"ngIf\"], [1, \"text-red-400\"]],\n  template: function InputTextComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, InputTextComponent_label_1_Template, 2, 2, \"label\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵtemplate(3, InputTextComponent_ng_container_3_Template, 3, 3, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(\"w-full h-full border border-gray-200 p-3 text-sm rounded-md focus:outline-none focus:text-gray-500 text-gray-500 \" + ctx.class);\n      i0.ɵɵproperty(\"type\", ctx.type)(\"id\", ctx.name)(\"name\", ctx.name)(\"formControl\", ctx.control)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.invalid && ctx.control.dirty && ctx.control.touched);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i1.KeyValuePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;;;;;;ICAxCC,gCAAuF;IAAAA,YAAS;IAAAA,iBAAQ;;;;IAAnFA,iCAAY;IAAsDA,eAAS;IAATA,kCAAS;;;;;IAYxFA,gCAA+D;IAAGA,YAAS;IAAAA,iBAAI;IAACA,6BAAY;IAAAA,iBAAQ;;;;IAAlCA,eAAS;IAATA,kCAAS;;;;;IAC3EA,gCAAgE;IAAGA,YAAS;IAAAA,iBAAI;IAACA,uCAAsB;IAAAA,yBAAG;IAAAA,YAAkC;IAAAA,iBAAI;IAACA,kCAAY;IAAAA,iBAAQ;;;;;IAAlGA,eAAS;IAATA,kCAAS;IAA8BA,eAAkC;IAAlCA,uDAAkC;;;;;IAC5IA,gCAAwF;IAAGA,YAAS;IAAAA,iBAAI;IAACA,8BAAa;IAAAA,iBAAQ;;;;IAAnCA,eAAS;IAATA,kCAAS;;;;;IAHxGA,8BAAyG;IACrGA,4FAAoG;IACpGA,4FAAqK;IACrKA,4FAA8H;IAElIA,iBAAM;;;;IAJMA,eAA+B;IAA/BA,mDAA+B;IAC/BA,eAAgC;IAAhCA,oDAAgC;IAChCA,eAAwD;IAAxDA,+EAAwD;;;;;IAJxEA,6BAA0E;IACtEA,kFAKM;;IACVA,0BAAe;;;;IANgEA,eAA4B;IAA5BA,qEAA4B;;;ADJ/G,OAAM,MAAOC,kBAAkB;EAL/BC;IAMW,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,EAAE;IAClB,gBAAW,GAAW,EAAE;IACxB,aAAQ,GAAY,KAAK;IACzB,YAAO,GAAgB,IAAIH,WAAW,EAAE;;EAEjDI,QAAQ;IACN,IAAG,CAAC,IAAI,CAACC,IAAI,EAAC;MAAC,IAAI,CAACA,IAAI,GAAG,MAAM;;IACjC,IAAG,CAAC,IAAI,CAACC,WAAW,EAAC;MAAC,IAAI,CAACA,WAAW,GAAG,EAAE;;IAC3C,IAAG,CAAC,IAAI,CAACC,QAAQ,EAAC;MAAC,IAAI,CAACA,QAAQ,GAAG,KAAK;;IACxC,IAAG,CAAC,IAAI,CAACC,KAAK,EAAC;MAAC,IAAI,CAACA,KAAK,GAAG,EAAE;;EACjC;;AAdWN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAO;EAAAC;IAAAL;IAAAM;IAAAC;IAAAJ;IAAAF;IAAAC;IAAAM;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BhB,8BAAmD;MAC/CA,uEAAwG;MACxGA,2BAQE;MACFA,qFAOe;MACnBA,iBAAM;;;MAlBMA,eAAW;MAAXA,gCAAW;MAQfA,eAAmI;MAAnIA,8IAAmI;MANnIA,+BAAa;MAQFA,eAAyD;MAAzDA,sFAAyD","names":["FormControl","i0","InputTextComponent","constructor","ngOnInit","type","placeholder","readonly","class","selectors","inputs","label","name","control","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/shared/components/input-text/input-text.component.ts","/home/laye/dev/spring/atos-micro-angular/app/src/app/shared/components/input-text/input-text.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'inputTextComponent',\n  templateUrl: './input-text.component.html',\n  styleUrls: ['./input-text.component.scss']\n})\nexport class InputTextComponent implements OnInit {\n  @Input() type: string = '';\n  @Input() label: string = '';\n  @Input() name: string = '';\n  @Input() class: string = '';\n  @Input() placeholder: string = '';\n  @Input() readonly: boolean = false\n  @Input() control: FormControl = new FormControl();\n\n  ngOnInit(): void {\n    if(!this.type){this.type = \"text\"}\n    if(!this.placeholder){this.placeholder = ''}\n    if(!this.readonly){this.readonly = false}\n    if(!this.class){this.class = ''}\n  }\n}\n","<div class=\"w-full flex flex-col items-start mb-4\">\n    <label *ngIf=\"label\" [for]=\"name\" class=\"text-white md:text-gray-500 font-medium mb-1\">{{label}}</label>\n    <input \n        [type]=\"type\"\n        [id]=\"name\"\n        [name]=\"name\"\n        [formControl]=\"control\"\n        [placeholder]=\"placeholder\"\n        [readonly]=\"readonly\"\n        [class]=\"'w-full h-full border border-gray-200 p-3 text-sm rounded-md focus:outline-none focus:text-gray-500 text-gray-500 '+class\"\n    />\n    <ng-container *ngIf=\"control.invalid && control.dirty && control.touched\">\n        <div class=\"flex flex-col justify-start items-start gap-2\" *ngFor=\"let err of control.errors | keyvalue\">\n            <small *ngIf=\"err['key'] === 'required' \" class=\"text-red-400\"><b>{{label}}</b> est requis !</small>\n            <small *ngIf=\"err['key'] === 'minlength' \" class=\"text-red-400\"><b>{{label}}</b> doit avoir au minimum <b>{{err['value']['requiredLength']}}</b> caractères !</small>\n            <small *ngIf=\"err['key'] === 'email' || err['key'] === 'pattern' \" class=\"text-red-400\"><b>{{label}}</b> est invalid !</small>\n            <!-- {{err | json}} -->\n        </div>\n    </ng-container>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}