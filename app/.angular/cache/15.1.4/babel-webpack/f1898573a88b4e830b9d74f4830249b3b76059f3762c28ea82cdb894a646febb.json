{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../shared/components/input-text/input-text.component\";\nimport * as i3 from \"../../../shared/components/title/title.component\";\nfunction WorkExperiencesFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"inputTextComponent\", 5)(2, \"inputTextComponent\", 6)(3, \"inputTextComponent\", 7)(4, \"inputTextComponent\", 8)(5, \"inputTextComponent\", 9);\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function WorkExperiencesFormComponent_div_2_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeWorkExperience(i_r2));\n    });\n    i0.ɵɵtext(7, \"Remove Work Experience\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const work_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(work_r1.get(\"company\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(work_r1.get(\"jobTitle\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(work_r1.get(\"jobDescription\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(work_r1.get(\"startDate\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", ctx_r0.getControl(work_r1.get(\"endDate\")));\n  }\n}\nexport class WorkExperiencesFormComponent {\n  constructor() {\n    this.workXCompanyControl = new FormControl(\"\", Validators.required);\n    this.workXJobTitleControl = new FormControl(\"\", Validators.required);\n    this.workXJobDescritionControl = new FormControl(\"\", Validators.required);\n    this.workXstartDateControl = new FormControl(\"\", Validators.required);\n    this.workXendDateControl = new FormControl(\"\", Validators.required);\n  }\n  getControl(control) {\n    return control;\n  }\n  addWorkExperience() {\n    this.form.push(new FormGroup({\n      company: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      jobTitle: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      jobDescription: new FormControl('', [Validators.required, Validators.minLength(20)]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('')\n    }));\n  }\n  removeWorkExperience(index) {\n    this.form.removeAt(index);\n  }\n}\nWorkExperiencesFormComponent.ɵfac = function WorkExperiencesFormComponent_Factory(t) {\n  return new (t || WorkExperiencesFormComponent)();\n};\nWorkExperiencesFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WorkExperiencesFormComponent,\n  selectors: [[\"app-work-experiences-form\"]],\n  inputs: {\n    form: \"form\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"experiences\", \"px-4\"], [\"title\", \"Work Experiences\"], [\"class\", \"form\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"add-category\", 3, \"click\"], [1, \"form\"], [\"type\", \"text\", \"label\", \"Company\", \"name\", \"workXCompany\", \"placeholder\", \"Company\", 1, \"workXCompany\", 3, \"control\"], [\"type\", \"text\", \"label\", \"Job Title\", \"name\", \"workXJobTitle\", \"placeholder\", \"Job Title\", 1, \"workXJobTitle\", 3, \"control\"], [\"type\", \"text\", \"label\", \"Description\", \"name\", \"workXDescription\", \"placeholder\", \"Description\", 1, \"workXDescription\", 3, \"control\"], [\"type\", \"date\", \"label\", \"Start Date\", \"name\", \"workXStartDate\", 1, \"workXStartDate\", 3, \"control\"], [\"type\", \"date\", \"label\", \"End Date\", \"name\", \"workXEndDate\", 1, \"workXEndDate\", 3, \"control\"], [\"type\", \"button\", 1, \"remove-category\", 3, \"click\"]],\n  template: function WorkExperiencesFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"titleComponent\", 1);\n      i0.ɵɵtemplate(2, WorkExperiencesFormComponent_div_2_Template, 8, 5, \"div\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function WorkExperiencesFormComponent_Template_button_click_3_listener() {\n        return ctx.addWorkExperience();\n      });\n      i0.ɵɵtext(4, \"Add Work Experience\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.form.controls);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.InputTextComponent, i3.TitleComponent],\n  styles: [\".experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%] {\\n  grid-template-areas: \\\"company jobTitle\\\" \\\"description .\\\" \\\"startDate endDate\\\" \\\". removeBtn\\\";\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .workXCompany[_ngcontent-%COMP%] {\\n  grid-area: company;\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .workXJobTitle[_ngcontent-%COMP%] {\\n  grid-area: jobTitle;\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .workXDescription[_ngcontent-%COMP%] {\\n  grid-area: description;\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .workXStartDate[_ngcontent-%COMP%] {\\n  grid-area: startDate;\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .workXEndDate[_ngcontent-%COMP%] {\\n  grid-area: endDate;\\n}\\n.experiences[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .remove-category[_ngcontent-%COMP%] {\\n  grid-area: removeBtn;\\n  justify-self: end;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYnVpbGRlci9jb21wb25lbnRzL3dvcmstZXhwZXJpZW5jZXMtZm9ybS93b3JrLWV4cGVyaWVuY2VzLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSx5RkFBQTtBQUFSO0FBS1E7RUFDSSxrQkFBQTtBQUhaO0FBTVE7RUFDSSxtQkFBQTtBQUpaO0FBT1E7RUFDSSxzQkFBQTtBQUxaO0FBUVE7RUFDSSxvQkFBQTtBQU5aO0FBU1E7RUFDSSxrQkFBQTtBQVBaO0FBVVE7RUFDSSxvQkFBQTtFQUNBLGlCQUFBO0FBUloiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhwZXJpZW5jZXMge1xuICAgIC5mb3JtIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJjb21wYW55IGpvYlRpdGxlXCJcbiAgICAgICAgICAgIFwiZGVzY3JpcHRpb24gLlwiXG4gICAgICAgICAgICBcInN0YXJ0RGF0ZSBlbmREYXRlXCJcbiAgICAgICAgICAgIFwiLiByZW1vdmVCdG5cIjtcblxuICAgICAgICAud29ya1hDb21wYW55IHtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogY29tcGFueTtcbiAgICAgICAgfVxuXG4gICAgICAgIC53b3JrWEpvYlRpdGxlIHtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogam9iVGl0bGU7XG4gICAgICAgIH1cblxuICAgICAgICAud29ya1hEZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBncmlkLWFyZWE6IGRlc2NyaXB0aW9uO1xuICAgICAgICB9XG5cbiAgICAgICAgLndvcmtYU3RhcnREYXRlIHtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogc3RhcnREYXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLndvcmtYRW5kRGF0ZSB7XG4gICAgICAgICAgICBncmlkLWFyZWE6IGVuZERhdGU7XG4gICAgICAgIH1cblxuICAgICAgICAucmVtb3ZlLWNhdGVnb3J5IHtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmVtb3ZlQnRuO1xuICAgICAgICAgICAganVzdGlmeS1zZWxmOiBlbmQ7XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqCA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICC3FC,8BAAoE;IAChEA,wCACuE;IAQvEA,kCAAgF;IAAlCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAACA,sCAAsB;IAAAA,iBAAS;;;;;IAR3GA,eAA2C;IAA3CA,mEAA2C;IAE3CA,eAA4C;IAA5CA,oEAA4C;IAE5CA,eAAkD;IAAlDA,0EAAkD;IACmBA,eAA6C;IAA7CA,qEAA6C;IACjDA,eAA2C;IAA3CA,mEAA2C;;;ADFxH,OAAM,MAAOC,4BAA4B;EALzCC;IAQE,wBAAmB,GAAgB,IAAIL,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;IAC3E,yBAAoB,GAAgB,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;IAC5E,8BAAyB,GAAgB,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;IACjF,0BAAqB,GAAgB,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;IAC7E,wBAAmB,GAAgB,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;;EAE3EC,UAAU,CAACC,OAA+B;IACxC,OAAOA,OAAsB;EAC/B;EAEAC,iBAAiB;IACf,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAIV,SAAS,CAAC;MAC3BW,OAAO,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5EC,QAAQ,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7EE,cAAc,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACpFG,SAAS,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,CAAC,CAAC;MACrDW,OAAO,EAAE,IAAIjB,WAAW,CAAC,EAAE;KAC5B,CAAC,CAAC;EACL;EAEAkB,oBAAoB,CAACC,KAAa;IAChC,IAAI,CAACT,IAAI,CAACU,QAAQ,CAACD,KAAK,CAAC;EAC3B;;AAzBWf,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAAiB;EAAAC;IAAAZ;EAAA;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;MCRzCvB,8BAA8B;MAC1BA,oCAA0D;MAC1DA,6EAWM;MAENA,iCAAyE;MAA9BA;QAAA,OAASwB,uBAAmB;MAAA,EAAC;MAACxB,mCAAmB;MAAAA,iBAAS;;;MAblEA,eAAkB;MAAlBA,2CAAkB","names":["FormControl","FormGroup","Validators","i0","WorkExperiencesFormComponent","constructor","required","getControl","control","addWorkExperience","form","push","company","minLength","jobTitle","jobDescription","startDate","endDate","removeWorkExperience","index","removeAt","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/builder/components/work-experiences-form/work-experiences-form.component.ts","/home/laye/dev/spring/atos-micro-angular/app/src/app/builder/components/work-experiences-form/work-experiences-form.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-work-experiences-form',\n  templateUrl: './work-experiences-form.component.html',\n  styleUrls: ['./work-experiences-form.component.scss']\n})\nexport class WorkExperiencesFormComponent {\n  @Input() form: FormArray;\n\n  workXCompanyControl: FormControl = new FormControl(\"\", Validators.required);\n  workXJobTitleControl: FormControl = new FormControl(\"\", Validators.required);\n  workXJobDescritionControl: FormControl = new FormControl(\"\", Validators.required);\n  workXstartDateControl: FormControl = new FormControl(\"\", Validators.required);\n  workXendDateControl: FormControl = new FormControl(\"\", Validators.required);\n\n  getControl(control: AbstractControl | null): FormControl {\n    return control as FormControl;\n  }\n\n  addWorkExperience(): void {\n    this.form.push(new FormGroup({\n      company: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      jobTitle: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      jobDescription: new FormControl('', [Validators.required, Validators.minLength(20)]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('')\n    }));\n  }\n\n  removeWorkExperience(index: number): void {\n    this.form.removeAt(index);\n  }\n}\n","<div class=\"experiences px-4\">\n    <titleComponent title=\"Work Experiences\"></titleComponent>\n    <div class=\"form\" *ngFor=\"let work of form.controls; let i = index\">\n        <inputTextComponent type=\"text\" label=\"Company\" name=\"workXCompany\" placeholder=\"Company\"\n            [control]=\"getControl(work.get('company'))\" class=\"workXCompany\" />\n        <inputTextComponent type=\"text\" label=\"Job Title\" name=\"workXJobTitle\" placeholder=\"Job Title\"\n            [control]=\"getControl(work.get('jobTitle'))\" class=\"workXJobTitle\"/>\n        <inputTextComponent type=\"text\" label=\"Description\" name=\"workXDescription\" placeholder=\"Description\"\n            [control]=\"getControl(work.get('jobDescription'))\" class=\"workXDescription\"/>\n        <inputTextComponent type=\"date\" label=\"Start Date\" name=\"workXStartDate\" [control]=\"getControl(work.get('startDate'))\" class=\"workXStartDate\"/>\n        <inputTextComponent type=\"date\" label=\"End Date\" name=\"workXEndDate\" [control]=\"getControl(work.get('endDate'))\" class=\"workXEndDate\"/>\n\n        <button class=\"remove-category\" type=\"button\" (click)=\"removeWorkExperience(i)\">Remove Work Experience</button>\n    </div>\n\n    <button class=\"add-category\" type=\"button\" (click)=\"addWorkExperience()\">Add Work Experience</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}