{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../shared/services/notification.service\";\nimport * as i3 from \"@angular/router\";\nexport class SingUpComponent {\n  constructor(fb, notify, route) {\n    this.fb = fb;\n    this.notify = notify;\n    this.route = route;\n    this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n    this.showPassword = false;\n    this.onShowPassword = () => {\n      this.showPassword = !this.showPassword;\n    };\n    this.onSubmit = () => {};\n  }\n  ngOnInit() {\n    this.singUpForm = this.fb.group({\n      firsName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.email, Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]]\n    });\n    this.button = {\n      func: () => this.onSubmit(),\n      icon: '',\n      params: [],\n      showIcon: false,\n      showTitle: true,\n      title: \"Se connecter\",\n      type: 'submit',\n      class: `bg-blue-500 rounded-[5px] px-4 py-2 text-white font-medium shadow-xl`\n    };\n    console.log(this.singUpForm.invalid);\n  }\n  get firstName() {\n    return this.singUpForm.get('firstName');\n  }\n  get lastName() {\n    return this.singUpForm.get('lastName');\n  }\n  get email() {\n    return this.singUpForm.get('email');\n  }\n  get password() {\n    return this.singUpForm.get('password');\n  }\n}\nSingUpComponent.ɵfac = function SingUpComponent_Factory(t) {\n  return new (t || SingUpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSingUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingUpComponent,\n  selectors: [[\"app-sing-up\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"w-full\", \"flex\", \"items-center\", \"mx-auto\", \"bg-white\", \"p-4\", \"min-h-[calc(100vh-8.5rem)]\"]],\n  template: function SingUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAqB,gBAAgB;;;;;AAUhF,OAAM,MAAOC,eAAe;EAM1BC,YACUC,EAAe,EACfC,MAA2B,EAC3BC,KAAa;IAFb,OAAE,GAAFF,EAAE;IACF,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IARf,iBAAY,GAAW,2CAA2C;IAClE,iBAAY,GAAY,KAAK;IAoC3B,mBAAc,GAAG,MAAK;MACpB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IAID,aAAQ,GAAG,MAAK,CAEhB,CAAC;EApCG;EAEJC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC9BC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACa,KAAK,EAAEb,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACc,OAAO,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;MAC3FC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,EAAEjB,UAAU,CAACkB,SAAS,CAAC,EAAE,CAAC,CAAC;KACxF,CAAC;IACF,IAAI,CAACC,MAAM,GAAG;MACZC,IAAI,EAAE,MAAK,IAAI,CAACC,QAAQ,EAAE;MAC1BC,IAAI,EAAC,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;KACR;IACDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,UAAU,CAACuB,OAAO,CAAC;EACtC;EAEA,IAAIC,SAAS;IAAK,OAAO,IAAI,CAACxB,UAAU,CAACyB,GAAG,CAAC,WAAW,CAAgB;EAAE;EAC1E,IAAIrB,QAAQ;IAAK,OAAO,IAAI,CAACJ,UAAU,CAACyB,GAAG,CAAC,UAAU,CAAgB;EAAE;EACxE,IAAIpB,KAAK;IAAK,OAAO,IAAI,CAACL,UAAU,CAACyB,GAAG,CAAC,OAAO,CAAgB;EAAE;EAClE,IAAIjB,QAAQ;IAAK,OAAO,IAAI,CAACR,UAAU,CAACyB,GAAG,CAAC,UAAU,CAAgB;EAAE;;AAnC/DhC,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,yBACM","names":["Validators","SingUpComponent","constructor","fb","notify","route","showPassword","ngOnInit","singUpForm","group","firsName","required","lastName","email","pattern","emailPattern","password","minLength","maxLength","button","func","onSubmit","icon","params","showIcon","showTitle","title","type","class","console","log","invalid","firstName","get","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/auth/components/sing-up/sing-up.component.ts","/home/laye/dev/spring/atos-micro-angular/app/src/app/auth/components/sing-up/sing-up.component.html"],"sourcesContent":["import { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Button } from '../../../shared/interfaces/button';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n  selector: 'app-sing-up',\n  templateUrl: './sing-up.component.html',\n  styleUrls: ['./sing-up.component.scss']\n})\nexport class SingUpComponent {\n  emailPattern: string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n  showPassword: boolean = false;\n  singUpForm: FormGroup;\n  button: Button\n\n  constructor(\n    private fb: FormBuilder,\n    private notify: NotificationService,\n    private route: Router\n    ) { }\n\n    ngOnInit(): void {\n      this.singUpForm = this.fb.group({\n        firsName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.email, Validators.required, Validators.pattern(this.emailPattern)]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]]\n      });\n      this.button = {\n        func: ()=> this.onSubmit(),\n        icon:'',\n        params: [],\n        showIcon: false,\n        showTitle: true,\n        title: \"Se connecter\",\n        type: 'submit',\n        class: `bg-blue-500 rounded-[5px] px-4 py-2 text-white font-medium shadow-xl`,\n      }\n      console.log(this.singUpForm.invalid)\n    }\n\n    get firstName() { return this.singUpForm.get('firstName') as FormControl; }\n    get lastName() { return this.singUpForm.get('lastName') as FormControl; }\n    get email() { return this.singUpForm.get('email') as FormControl; }\n    get password() { return this.singUpForm.get('password') as FormControl; }\n\n  \n    onShowPassword = () =>{\n      this.showPassword = !this.showPassword\n    }\n\n   \n  \n    onSubmit = () => {\n      \n    }\n\n}\n","<div class=\"w-full flex items-center mx-auto bg-white p-4 min-h-[calc(100vh-8.5rem)]\">\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}