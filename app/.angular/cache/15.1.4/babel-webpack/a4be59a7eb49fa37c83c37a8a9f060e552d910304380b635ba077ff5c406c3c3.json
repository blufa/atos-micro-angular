{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(_http) {\n    this._http = _http;\n    this.basUrlApi = \"\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getList(url) {\n    return this._http.get(`${this.basUrlApi}/${url}`, this.httpOptions);\n  }\n  getSingle(url) {\n    return this._http.get(`${this.basUrlApi}/${url}`, this.httpOptions);\n  }\n  addData(url, data) {\n    return this._http.post(`${this.basUrlApi}/${url}`, data, this.httpOptions);\n  }\n  updateData(url, data) {\n    return this._http.patch(`${this.basUrlApi}/${url}`, data, this.httpOptions);\n  }\n  deleteSingle(url) {\n    return this._http.delete(`${this.basUrlApi}/${url}`, this.httpOptions);\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,WAAW;EAMpBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAJV,cAAS,GAAW,EAAE;IAC/B,gBAAW,GAAQ;MACzBC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAC0C;EAEzCK,OAAO,CAACC,GAAW;IAAqB,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,SAAS,IAAIF,GAAG,EAAE,EAAE,IAAI,CAACG,WAAW,CAAC;EAAE;EAE7GC,SAAS,CAACJ,GAAW;IAAqB,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,SAAS,IAAIF,GAAG,EAAE,EAAE,IAAI,CAACG,WAAW,CAAC;EAAE;EAE/GE,OAAO,CAACL,GAAW,EAAEM,IAAY;IAAqB,OAAO,IAAI,CAACT,KAAK,CAACU,IAAI,CAAC,GAAG,IAAI,CAACL,SAAS,IAAIF,GAAG,EAAE,EAAEM,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EAAE;EAElIK,UAAU,CAACR,GAAW,EAAEM,IAAY;IAAqB,OAAO,IAAI,CAACT,KAAK,CAACY,KAAK,CAAC,GAAG,IAAI,CAACP,SAAS,IAAIF,GAAG,EAAE,EAAEM,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EAAE;EAEtIO,YAAY,CAACV,GAAW;IAAqB,OAAO,IAAI,CAACH,KAAK,CAACc,MAAM,CAAC,GAAG,IAAI,CAACT,SAAS,IAAIF,GAAG,EAAE,EAAE,IAAI,CAACG,WAAW,CAAC;EAAE;;AAhB5GR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["HttpHeaders","HttpService","constructor","_http","headers","getList","url","get","basUrlApi","httpOptions","getSingle","addData","data","post","updateData","patch","deleteSingle","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/shared/services/http.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private readonly basUrlApi: string = \"\";\n  private httpOptions: any = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n    constructor(private _http: HttpClient) { }\n\n    getList(url: string): Observable<any> { return this._http.get(`${this.basUrlApi}/${url}`, this.httpOptions); }\n\n    getSingle(url: string): Observable<any> { return this._http.get(`${this.basUrlApi}/${url}`, this.httpOptions); }\n\n    addData(url: string, data: Object): Observable<any> { return this._http.post(`${this.basUrlApi}/${url}`, data, this.httpOptions); }\n\n    updateData(url: string, data: Object): Observable<any> { return this._http.patch(`${this.basUrlApi}/${url}`, data, this.httpOptions); }\n\n    deleteSingle(url: string): Observable<any> { return this._http.delete(`${this.basUrlApi}/${url}`, this.httpOptions); }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}