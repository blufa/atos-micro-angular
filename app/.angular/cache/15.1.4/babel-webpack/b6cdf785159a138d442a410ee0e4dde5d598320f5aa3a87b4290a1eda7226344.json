{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(_route, _authService) {\n    this._route = _route;\n    this._authService = _authService;\n  }\n  canActivate(route, state) {\n    if (this._authService.isLoggedIn()) {\n      return true;\n    }\n    this._route.navigate(['/auth/login']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc,EAAUC,YAAyB;IAAjD,WAAM,GAAND,MAAM;IAAkB,iBAAY,GAAZC,YAAY;EAAiB;EACzEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,IAAI,CAACH,YAAY,CAACI,UAAU,EAAE,EAAE;MAAE,OAAO,IAAI;;IACjD,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACrC,OAAO,KAAK;EACd;;AARWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","_route","_authService","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/laye/dev/spring/atos-micro-angular/app/src/app/shared/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _route: Router, private _authService: AuthService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (this._authService.isLoggedIn()) { return true; }\n    this._route.navigate(['/auth/login']);\n    return false;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}